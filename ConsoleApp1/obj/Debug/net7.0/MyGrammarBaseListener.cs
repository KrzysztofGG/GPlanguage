//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.6
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\krzys\Desktop\GPlanguage\ConsoleApp1\Content\MyGrammar.g4 by ANTLR 4.6.6

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace ConsoleApp1.Content {

using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="IMyGrammarListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.6")]
[System.CLSCompliant(false)]
public partial class MyGrammarBaseListener : IMyGrammarListener {
	/// <summary>
	/// Enter a parse tree produced by the <c>aritStrongVal</c>
	/// labeled alternative in <see cref="MyGrammarParser.numeric_value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAritStrongVal([NotNull] MyGrammarParser.AritStrongValContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>aritStrongVal</c>
	/// labeled alternative in <see cref="MyGrammarParser.numeric_value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAritStrongVal([NotNull] MyGrammarParser.AritStrongValContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>numVal</c>
	/// labeled alternative in <see cref="MyGrammarParser.numeric_value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNumVal([NotNull] MyGrammarParser.NumValContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>numVal</c>
	/// labeled alternative in <see cref="MyGrammarParser.numeric_value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNumVal([NotNull] MyGrammarParser.NumValContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>numVarVal</c>
	/// labeled alternative in <see cref="MyGrammarParser.numeric_value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNumVarVal([NotNull] MyGrammarParser.NumVarValContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>numVarVal</c>
	/// labeled alternative in <see cref="MyGrammarParser.numeric_value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNumVarVal([NotNull] MyGrammarParser.NumVarValContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>parenNumVal</c>
	/// labeled alternative in <see cref="MyGrammarParser.numeric_value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParenNumVal([NotNull] MyGrammarParser.ParenNumValContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>parenNumVal</c>
	/// labeled alternative in <see cref="MyGrammarParser.numeric_value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParenNumVal([NotNull] MyGrammarParser.ParenNumValContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>subVal</c>
	/// labeled alternative in <see cref="MyGrammarParser.numeric_value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSubVal([NotNull] MyGrammarParser.SubValContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>subVal</c>
	/// labeled alternative in <see cref="MyGrammarParser.numeric_value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSubVal([NotNull] MyGrammarParser.SubValContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>aritWeakVal</c>
	/// labeled alternative in <see cref="MyGrammarParser.numeric_value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAritWeakVal([NotNull] MyGrammarParser.AritWeakValContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>aritWeakVal</c>
	/// labeled alternative in <see cref="MyGrammarParser.numeric_value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAritWeakVal([NotNull] MyGrammarParser.AritWeakValContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>whileStatement</c>
	/// labeled alternative in <see cref="MyGrammarParser.while_loop"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterWhileStatement([NotNull] MyGrammarParser.WhileStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>whileStatement</c>
	/// labeled alternative in <see cref="MyGrammarParser.while_loop"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitWhileStatement([NotNull] MyGrammarParser.WhileStatementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>AssignBool</c>
	/// labeled alternative in <see cref="MyGrammarParser.assignment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAssignBool([NotNull] MyGrammarParser.AssignBoolContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>AssignBool</c>
	/// labeled alternative in <see cref="MyGrammarParser.assignment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAssignBool([NotNull] MyGrammarParser.AssignBoolContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>AssignNum</c>
	/// labeled alternative in <see cref="MyGrammarParser.assignment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAssignNum([NotNull] MyGrammarParser.AssignNumContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>AssignNum</c>
	/// labeled alternative in <see cref="MyGrammarParser.assignment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAssignNum([NotNull] MyGrammarParser.AssignNumContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>parenBoolVal</c>
	/// labeled alternative in <see cref="MyGrammarParser.bool_value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParenBoolVal([NotNull] MyGrammarParser.ParenBoolValContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>parenBoolVal</c>
	/// labeled alternative in <see cref="MyGrammarParser.bool_value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParenBoolVal([NotNull] MyGrammarParser.ParenBoolValContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>compVal</c>
	/// labeled alternative in <see cref="MyGrammarParser.bool_value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCompVal([NotNull] MyGrammarParser.CompValContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>compVal</c>
	/// labeled alternative in <see cref="MyGrammarParser.bool_value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCompVal([NotNull] MyGrammarParser.CompValContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>trueVal</c>
	/// labeled alternative in <see cref="MyGrammarParser.bool_value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTrueVal([NotNull] MyGrammarParser.TrueValContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>trueVal</c>
	/// labeled alternative in <see cref="MyGrammarParser.bool_value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTrueVal([NotNull] MyGrammarParser.TrueValContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>logicVal</c>
	/// labeled alternative in <see cref="MyGrammarParser.bool_value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLogicVal([NotNull] MyGrammarParser.LogicValContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>logicVal</c>
	/// labeled alternative in <see cref="MyGrammarParser.bool_value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLogicVal([NotNull] MyGrammarParser.LogicValContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>notVal</c>
	/// labeled alternative in <see cref="MyGrammarParser.bool_value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNotVal([NotNull] MyGrammarParser.NotValContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>notVal</c>
	/// labeled alternative in <see cref="MyGrammarParser.bool_value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNotVal([NotNull] MyGrammarParser.NotValContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>boolVarVal</c>
	/// labeled alternative in <see cref="MyGrammarParser.bool_value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBoolVarVal([NotNull] MyGrammarParser.BoolVarValContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>boolVarVal</c>
	/// labeled alternative in <see cref="MyGrammarParser.bool_value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBoolVarVal([NotNull] MyGrammarParser.BoolVarValContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>falseVal</c>
	/// labeled alternative in <see cref="MyGrammarParser.bool_value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFalseVal([NotNull] MyGrammarParser.FalseValContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>falseVal</c>
	/// labeled alternative in <see cref="MyGrammarParser.bool_value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFalseVal([NotNull] MyGrammarParser.FalseValContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>scanBool</c>
	/// labeled alternative in <see cref="MyGrammarParser.scan_call"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterScanBool([NotNull] MyGrammarParser.ScanBoolContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>scanBool</c>
	/// labeled alternative in <see cref="MyGrammarParser.scan_call"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitScanBool([NotNull] MyGrammarParser.ScanBoolContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>scanNum</c>
	/// labeled alternative in <see cref="MyGrammarParser.scan_call"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterScanNum([NotNull] MyGrammarParser.ScanNumContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>scanNum</c>
	/// labeled alternative in <see cref="MyGrammarParser.scan_call"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitScanNum([NotNull] MyGrammarParser.ScanNumContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>printNum</c>
	/// labeled alternative in <see cref="MyGrammarParser.print_call"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPrintNum([NotNull] MyGrammarParser.PrintNumContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>printNum</c>
	/// labeled alternative in <see cref="MyGrammarParser.print_call"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPrintNum([NotNull] MyGrammarParser.PrintNumContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>printBool</c>
	/// labeled alternative in <see cref="MyGrammarParser.print_call"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPrintBool([NotNull] MyGrammarParser.PrintBoolContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>printBool</c>
	/// labeled alternative in <see cref="MyGrammarParser.print_call"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPrintBool([NotNull] MyGrammarParser.PrintBoolContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>ifStatement</c>
	/// labeled alternative in <see cref="MyGrammarParser.if_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIfStatement([NotNull] MyGrammarParser.IfStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ifStatement</c>
	/// labeled alternative in <see cref="MyGrammarParser.if_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIfStatement([NotNull] MyGrammarParser.IfStatementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="MyGrammarParser.program"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterProgram([NotNull] MyGrammarParser.ProgramContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyGrammarParser.program"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitProgram([NotNull] MyGrammarParser.ProgramContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="MyGrammarParser.expressions"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpressions([NotNull] MyGrammarParser.ExpressionsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyGrammarParser.expressions"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpressions([NotNull] MyGrammarParser.ExpressionsContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="MyGrammarParser.if_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIf_statement([NotNull] MyGrammarParser.If_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyGrammarParser.if_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIf_statement([NotNull] MyGrammarParser.If_statementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="MyGrammarParser.while_loop"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterWhile_loop([NotNull] MyGrammarParser.While_loopContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyGrammarParser.while_loop"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitWhile_loop([NotNull] MyGrammarParser.While_loopContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="MyGrammarParser.print_call"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPrint_call([NotNull] MyGrammarParser.Print_callContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyGrammarParser.print_call"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPrint_call([NotNull] MyGrammarParser.Print_callContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="MyGrammarParser.scan_call"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterScan_call([NotNull] MyGrammarParser.Scan_callContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyGrammarParser.scan_call"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitScan_call([NotNull] MyGrammarParser.Scan_callContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="MyGrammarParser.assignment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAssignment([NotNull] MyGrammarParser.AssignmentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyGrammarParser.assignment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAssignment([NotNull] MyGrammarParser.AssignmentContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="MyGrammarParser.comparisson_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterComparisson_type([NotNull] MyGrammarParser.Comparisson_typeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyGrammarParser.comparisson_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitComparisson_type([NotNull] MyGrammarParser.Comparisson_typeContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="MyGrammarParser.logic_operator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLogic_operator([NotNull] MyGrammarParser.Logic_operatorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyGrammarParser.logic_operator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLogic_operator([NotNull] MyGrammarParser.Logic_operatorContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="MyGrammarParser.aritmetic_operator_strong"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAritmetic_operator_strong([NotNull] MyGrammarParser.Aritmetic_operator_strongContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyGrammarParser.aritmetic_operator_strong"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAritmetic_operator_strong([NotNull] MyGrammarParser.Aritmetic_operator_strongContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="MyGrammarParser.aritmetic_operator_weak"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAritmetic_operator_weak([NotNull] MyGrammarParser.Aritmetic_operator_weakContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyGrammarParser.aritmetic_operator_weak"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAritmetic_operator_weak([NotNull] MyGrammarParser.Aritmetic_operator_weakContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="MyGrammarParser.bool_value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBool_value([NotNull] MyGrammarParser.Bool_valueContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyGrammarParser.bool_value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBool_value([NotNull] MyGrammarParser.Bool_valueContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="MyGrammarParser.numeric_value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNumeric_value([NotNull] MyGrammarParser.Numeric_valueContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyGrammarParser.numeric_value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNumeric_value([NotNull] MyGrammarParser.Numeric_valueContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
} // namespace ConsoleApp1.Content

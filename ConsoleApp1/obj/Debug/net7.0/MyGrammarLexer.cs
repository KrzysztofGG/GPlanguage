//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.6
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\ogsimp\Desktop\genetycz\GPlanguage\ConsoleApp1\Content\MyGrammar.g4 by ANTLR 4.6.6

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace ConsoleApp1.Content {
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.6")]
[System.CLSCompliant(false)]
public partial class MyGrammarLexer : Lexer {
	public const int
		WS=1, LPAREN=2, RPAREN=3, LBRACE=4, RBRACE=5, ADD=6, SUB=7, MUL=8, DIV=9, 
		MOD=10, ASS=11, EQ=12, NEQ=13, LE=14, LEQ=15, GE=16, GEQ=17, AND=18, OR=19, 
		NOT=20, TRUE=21, FALSE=22, IF=23, WHILE=24, PRINT=25, SCAN=26, NUMBER=27, 
		NUM_VAR=28, BOOL_VAR=29;
	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"WS", "LPAREN", "RPAREN", "LBRACE", "RBRACE", "ADD", "SUB", "MUL", "DIV", 
		"MOD", "ASS", "EQ", "NEQ", "LE", "LEQ", "GE", "GEQ", "AND", "OR", "NOT", 
		"TRUE", "FALSE", "IF", "WHILE", "PRINT", "SCAN", "NUMBER", "NUM_VAR", 
		"BOOL_VAR"
	};


	public MyGrammarLexer(ICharStream input)
		: base(input)
	{
		_interp = new LexerATNSimulator(this,_ATN);
	}

	private static readonly string[] _LiteralNames = {
		null, null, "'('", "')'", "'{'", "'}'", "'+'", "'-'", "'*'", "'/'", "'%'", 
		"'='", "'=='", "'!='", "'<'", "'<='", "'>'", "'>='", "'&&'", "'||'", "'!'", 
		"'true'", "'false'", "'if'", "'while'", "'print'", "'scan'"
	};
	private static readonly string[] _SymbolicNames = {
		null, "WS", "LPAREN", "RPAREN", "LBRACE", "RBRACE", "ADD", "SUB", "MUL", 
		"DIV", "MOD", "ASS", "EQ", "NEQ", "LE", "LEQ", "GE", "GEQ", "AND", "OR", 
		"NOT", "TRUE", "FALSE", "IF", "WHILE", "PRINT", "SCAN", "NUMBER", "NUM_VAR", 
		"BOOL_VAR"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[System.Obsolete("Use Vocabulary instead.")]
	public static readonly string[] tokenNames = GenerateTokenNames(DefaultVocabulary, _SymbolicNames.Length);

	private static string[] GenerateTokenNames(IVocabulary vocabulary, int length) {
		string[] tokenNames = new string[length];
		for (int i = 0; i < tokenNames.Length; i++) {
			tokenNames[i] = vocabulary.GetLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = vocabulary.GetSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}

		return tokenNames;
	}

	[System.Obsolete("Use IRecognizer.Vocabulary instead.")]
	public override string[] TokenNames
	{
		get
		{
			return tokenNames;
		}
	}

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "MyGrammar.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return _serializedATN; } }

	public static readonly string _serializedATN =
		"\x3\xAF6F\x8320\x479D\xB75C\x4880\x1605\x191C\xAB37\x2\x1F\xA2\b\x1\x4"+
		"\x2\t\x2\x4\x3\t\x3\x4\x4\t\x4\x4\x5\t\x5\x4\x6\t\x6\x4\a\t\a\x4\b\t\b"+
		"\x4\t\t\t\x4\n\t\n\x4\v\t\v\x4\f\t\f\x4\r\t\r\x4\xE\t\xE\x4\xF\t\xF\x4"+
		"\x10\t\x10\x4\x11\t\x11\x4\x12\t\x12\x4\x13\t\x13\x4\x14\t\x14\x4\x15"+
		"\t\x15\x4\x16\t\x16\x4\x17\t\x17\x4\x18\t\x18\x4\x19\t\x19\x4\x1A\t\x1A"+
		"\x4\x1B\t\x1B\x4\x1C\t\x1C\x4\x1D\t\x1D\x4\x1E\t\x1E\x3\x2\x6\x2?\n\x2"+
		"\r\x2\xE\x2@\x3\x2\x3\x2\x3\x3\x3\x3\x3\x4\x3\x4\x3\x5\x3\x5\x3\x6\x3"+
		"\x6\x3\a\x3\a\x3\b\x3\b\x3\t\x3\t\x3\n\x3\n\x3\v\x3\v\x3\f\x3\f\x3\r\x3"+
		"\r\x3\r\x3\xE\x3\xE\x3\xE\x3\xF\x3\xF\x3\x10\x3\x10\x3\x10\x3\x11\x3\x11"+
		"\x3\x12\x3\x12\x3\x12\x3\x13\x3\x13\x3\x13\x3\x14\x3\x14\x3\x14\x3\x15"+
		"\x3\x15\x3\x16\x3\x16\x3\x16\x3\x16\x3\x16\x3\x17\x3\x17\x3\x17\x3\x17"+
		"\x3\x17\x3\x17\x3\x18\x3\x18\x3\x18\x3\x19\x3\x19\x3\x19\x3\x19\x3\x19"+
		"\x3\x19\x3\x1A\x3\x1A\x3\x1A\x3\x1A\x3\x1A\x3\x1A\x3\x1B\x3\x1B\x3\x1B"+
		"\x3\x1B\x3\x1B\x3\x1C\x6\x1C\x91\n\x1C\r\x1C\xE\x1C\x92\x3\x1C\x3\x1C"+
		"\x6\x1C\x97\n\x1C\r\x1C\xE\x1C\x98\x5\x1C\x9B\n\x1C\x3\x1D\x3\x1D\x3\x1D"+
		"\x3\x1E\x3\x1E\x3\x1E\x2\x2\x2\x1F\x3\x2\x3\x5\x2\x4\a\x2\x5\t\x2\x6\v"+
		"\x2\a\r\x2\b\xF\x2\t\x11\x2\n\x13\x2\v\x15\x2\f\x17\x2\r\x19\x2\xE\x1B"+
		"\x2\xF\x1D\x2\x10\x1F\x2\x11!\x2\x12#\x2\x13%\x2\x14\'\x2\x15)\x2\x16"+
		"+\x2\x17-\x2\x18/\x2\x19\x31\x2\x1A\x33\x2\x1B\x35\x2\x1C\x37\x2\x1D\x39"+
		"\x2\x1E;\x2\x1F\x3\x2\x4\x5\x2\v\f\xF\xF\"\"\x3\x2\x32;\xA5\x2\x3\x3\x2"+
		"\x2\x2\x2\x5\x3\x2\x2\x2\x2\a\x3\x2\x2\x2\x2\t\x3\x2\x2\x2\x2\v\x3\x2"+
		"\x2\x2\x2\r\x3\x2\x2\x2\x2\xF\x3\x2\x2\x2\x2\x11\x3\x2\x2\x2\x2\x13\x3"+
		"\x2\x2\x2\x2\x15\x3\x2\x2\x2\x2\x17\x3\x2\x2\x2\x2\x19\x3\x2\x2\x2\x2"+
		"\x1B\x3\x2\x2\x2\x2\x1D\x3\x2\x2\x2\x2\x1F\x3\x2\x2\x2\x2!\x3\x2\x2\x2"+
		"\x2#\x3\x2\x2\x2\x2%\x3\x2\x2\x2\x2\'\x3\x2\x2\x2\x2)\x3\x2\x2\x2\x2+"+
		"\x3\x2\x2\x2\x2-\x3\x2\x2\x2\x2/\x3\x2\x2\x2\x2\x31\x3\x2\x2\x2\x2\x33"+
		"\x3\x2\x2\x2\x2\x35\x3\x2\x2\x2\x2\x37\x3\x2\x2\x2\x2\x39\x3\x2\x2\x2"+
		"\x2;\x3\x2\x2\x2\x3>\x3\x2\x2\x2\x5\x44\x3\x2\x2\x2\a\x46\x3\x2\x2\x2"+
		"\tH\x3\x2\x2\x2\vJ\x3\x2\x2\x2\rL\x3\x2\x2\x2\xFN\x3\x2\x2\x2\x11P\x3"+
		"\x2\x2\x2\x13R\x3\x2\x2\x2\x15T\x3\x2\x2\x2\x17V\x3\x2\x2\x2\x19X\x3\x2"+
		"\x2\x2\x1B[\x3\x2\x2\x2\x1D^\x3\x2\x2\x2\x1F`\x3\x2\x2\x2!\x63\x3\x2\x2"+
		"\x2#\x65\x3\x2\x2\x2%h\x3\x2\x2\x2\'k\x3\x2\x2\x2)n\x3\x2\x2\x2+p\x3\x2"+
		"\x2\x2-u\x3\x2\x2\x2/{\x3\x2\x2\x2\x31~\x3\x2\x2\x2\x33\x84\x3\x2\x2\x2"+
		"\x35\x8A\x3\x2\x2\x2\x37\x90\x3\x2\x2\x2\x39\x9C\x3\x2\x2\x2;\x9F\x3\x2"+
		"\x2\x2=?\t\x2\x2\x2>=\x3\x2\x2\x2?@\x3\x2\x2\x2@>\x3\x2\x2\x2@\x41\x3"+
		"\x2\x2\x2\x41\x42\x3\x2\x2\x2\x42\x43\b\x2\x2\x2\x43\x4\x3\x2\x2\x2\x44"+
		"\x45\a*\x2\x2\x45\x6\x3\x2\x2\x2\x46G\a+\x2\x2G\b\x3\x2\x2\x2HI\a}\x2"+
		"\x2I\n\x3\x2\x2\x2JK\a\x7F\x2\x2K\f\x3\x2\x2\x2LM\a-\x2\x2M\xE\x3\x2\x2"+
		"\x2NO\a/\x2\x2O\x10\x3\x2\x2\x2PQ\a,\x2\x2Q\x12\x3\x2\x2\x2RS\a\x31\x2"+
		"\x2S\x14\x3\x2\x2\x2TU\a\'\x2\x2U\x16\x3\x2\x2\x2VW\a?\x2\x2W\x18\x3\x2"+
		"\x2\x2XY\a?\x2\x2YZ\a?\x2\x2Z\x1A\x3\x2\x2\x2[\\\a#\x2\x2\\]\a?\x2\x2"+
		"]\x1C\x3\x2\x2\x2^_\a>\x2\x2_\x1E\x3\x2\x2\x2`\x61\a>\x2\x2\x61\x62\a"+
		"?\x2\x2\x62 \x3\x2\x2\x2\x63\x64\a@\x2\x2\x64\"\x3\x2\x2\x2\x65\x66\a"+
		"@\x2\x2\x66g\a?\x2\x2g$\x3\x2\x2\x2hi\a(\x2\x2ij\a(\x2\x2j&\x3\x2\x2\x2"+
		"kl\a~\x2\x2lm\a~\x2\x2m(\x3\x2\x2\x2no\a#\x2\x2o*\x3\x2\x2\x2pq\av\x2"+
		"\x2qr\at\x2\x2rs\aw\x2\x2st\ag\x2\x2t,\x3\x2\x2\x2uv\ah\x2\x2vw\a\x63"+
		"\x2\x2wx\an\x2\x2xy\au\x2\x2yz\ag\x2\x2z.\x3\x2\x2\x2{|\ak\x2\x2|}\ah"+
		"\x2\x2}\x30\x3\x2\x2\x2~\x7F\ay\x2\x2\x7F\x80\aj\x2\x2\x80\x81\ak\x2\x2"+
		"\x81\x82\an\x2\x2\x82\x83\ag\x2\x2\x83\x32\x3\x2\x2\x2\x84\x85\ar\x2\x2"+
		"\x85\x86\at\x2\x2\x86\x87\ak\x2\x2\x87\x88\ap\x2\x2\x88\x89\av\x2\x2\x89"+
		"\x34\x3\x2\x2\x2\x8A\x8B\au\x2\x2\x8B\x8C\a\x65\x2\x2\x8C\x8D\a\x63\x2"+
		"\x2\x8D\x8E\ap\x2\x2\x8E\x36\x3\x2\x2\x2\x8F\x91\t\x3\x2\x2\x90\x8F\x3"+
		"\x2\x2\x2\x91\x92\x3\x2\x2\x2\x92\x90\x3\x2\x2\x2\x92\x93\x3\x2\x2\x2"+
		"\x93\x9A\x3\x2\x2\x2\x94\x96\a\x30\x2\x2\x95\x97\t\x3\x2\x2\x96\x95\x3"+
		"\x2\x2\x2\x97\x98\x3\x2\x2\x2\x98\x96\x3\x2\x2\x2\x98\x99\x3\x2\x2\x2"+
		"\x99\x9B\x3\x2\x2\x2\x9A\x94\x3\x2\x2\x2\x9A\x9B\x3\x2\x2\x2\x9B\x38\x3"+
		"\x2\x2\x2\x9C\x9D\aZ\x2\x2\x9D\x9E\t\x3\x2\x2\x9E:\x3\x2\x2\x2\x9F\xA0"+
		"\aN\x2\x2\xA0\xA1\t\x3\x2\x2\xA1<\x3\x2\x2\x2\a\x2@\x92\x98\x9A\x3\b\x2"+
		"\x2";
	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN.ToCharArray());
}
} // namespace ConsoleApp1.Content
